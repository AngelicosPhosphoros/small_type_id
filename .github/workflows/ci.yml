name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  run-clippy:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      # Pin clippy version to avoid introducing new CI failures.
      - name: Select Rust version
        run: rustup override set 1.87.0
      - name: Clippy
        # Need to enable them later.
        #run: cargo clippy -- -D clippy::pedantic
        run: echo "Clippy step are disabled for now"
  test-matrix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        rust:
          - stable
          - beta
          - nightly
          - 1.87.0  # MSRV
    steps:
      - uses: actions/checkout@v4
      - name: Select Rust version
        run: rustup override set ${{ matrix.rust }}
      - name: Build
        run: cargo build --verbose --workspace --exclude benches
      - name: Run tests
        run: cargo test --verbose --workspace --exclude benches
  miri-checks:
    # No need to run on others because platform specific unsafe is not really testable
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # Pin MIRI version to avoid introducing new CI failures.
      - name: Select Rust version
        run: rustup override set nightly-2025-06-11
      - run: rustup component add miri
      - name: Tests on MIRI
        run: cargo miri test --verbose --workspace --exclude benches
  check-hex-formatting-using-address-sanitizer:
    # No need to run on others because code it crossplat-form
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: "-Zsanitizer=address"
    steps:
      - uses: actions/checkout@v4
      - run: rustup override set nightly
      - run: rustup component add rust-src
      - name: Compile formatting checking using sanitizer
        run: cargo build -Zbuild-std --release --bin check_every_u32_hex
      - name: Test formatting of every possible u32
        run: ./target/release/check_every_u32_hex

